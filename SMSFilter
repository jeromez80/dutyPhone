#!/usr/bin/python

import time, os, errno
import MySQLdb
from docutils.nodes import row

pidfile = "SMSFilter.pid"

db = MySQLdb.connect(host="127.0.0.1",user="smadmin",passwd="testsmartMessage986",db="smartMessage")
#db = MySQLdb.connect(host="localhost",user="root",passwd="toormysql",db="smartMessage")
SQLCur = db.cursor()
kw = []

def pid_exists(pid):
    """Check whether pid exists in the current process table.
    UNIX only.
    """
    if pid < 0:
        return False
    if pid == 0:
        # According to "man 2 kill" PID 0 refers to every process
        # in the process of the calling process.
        # On certain systems 0 is a valid PID but we have no way
        # to know that in a portable fashion.
        raise ValueError('invalid PID 0')
    try:
        os.kill(pid,0)
    except OSError as err:
        if err.errno == errno.ESRCH:
            #ESRCH == no such process
            return False
        elif err.errno == errno.EPERM:
            return True
        else:
            #According to man 2 kill" possible error values are
            # (EINVAL, EPERM, ERCH)
            raise
        
    else:
        return True

def getKeywordFromDB():
    
    global SQLCur, kw

    SQLCur.execute("Select * from `Keywords` where Source_Type='SMS';")
    kw = SQLCur.fetchall()

def writeJobToDB(matchKeyword):
    
    global SQLCur, db
    SQLCur.execute("Insert INTO `jobs` (`job`) VALUES('" + matchKeyword + "')")
    db.commit()

def writeToOutMessageQueue(keywordID, message):
    
    global SQL, db
    print "enter writeToOutMessage"
    statement = "Select Source_Type,Source_ID,Action_Type,Dest_CtyCode,Dest_Number,Dest_Message,Dest_AppendRaw,Dest_Parameters from Keywords as KW, KeywordsActions as KWA where KW.Keyword_ID=KWA.Keyword_ID and KW.Keyword_ID=" + str(keywordID)
    SQLCur.execute(statement)
    kwa = SQLCur.fetchall()
    for kwarow in kwa:
        msg = MySQLdb.escape_string(message)
        #statement = "INSERT INTO OutMessageQueue (Job_Type,Dest_CtyCode,Dest_Number,Dest_Message) VALUES('" + str(kwarow[2]) + "','" + str(kwarow[3]) + "','" + str(kwarow[4]) + "','" + str(msg) + "')"
        statement = "INSERT INTO OutMessageQueue (Job_Type,Dest_CtyCode,Dest_Number,Dest_Message) VALUES(%s,%s,%s,%s)"
        SQLCur.execute(statement,(str(kwarow[2]),str(MySQLdb.escape_string(kwarow[3])),MySQLdb.escape_string(str(kwarow[4])),msg))
        db.commit()
    
def updateSMSProcessStatus(SMSlogID, status):
    
    global SQL, db
    statement = "Update IncomingSMS set Processed=" + str(status) + " where SMS_ID=" + str(SMSlogID)
    SQLCur.execute(statement)    
    db.commit()

def processSMSOnDB():
    
    global SQLCur
    statement = "Select * from IncomingSMS WHERE Processed = 0 ORDER BY SMS_ID ASC"
    SQLCur.execute(statement)
    for row in SQLCur:
        temprow = str(row[4])
        for kwrow in kw:
            tempkwrow = str(kwrow[3])
            if temprow.lower().find(tempkwrow.lower()) != -1:
                print "matched"
                print temprow
                writeToOutMessageQueue(kwrow[0],row[4])
                updateSMSProcessStatus(row[0],2) #2 is 1 is processed and matched
            else:
                updateSMSProcessStatus(row[0],1) #1 is processed and no matched
        
def main():
    
    pid = str(os.getpid())
    
    if os.path.isfile(pidfile):
        with open(pidfile,'r') as f:
            curpid=int(f.read().strip())
        if pid_exists(curpid):
            print("%s already exists,exiting" % pidfile)
            exit()
        else:
            print("%s exists, but process is dead. Creating now process file." % pidfile)
            
    file(pidfile,'w+').write(pid)   
    
    getKeywordFromDB()
    
    #while 1:
        
         #   time.sleep(1)
            
    processSMSOnDB()
            #processSmSOnDB()
            #processWhatsAppOnDB()
            #processEmailOnDB()
        

if __name__ == '__main__':
    main()
